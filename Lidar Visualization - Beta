import tkinter as tk
from tkinter import *
from functools import partial
import pandas as pd
import numpy as np
import math
import random
import os
import openpyexcel

root = tk.Tk()

class sabit(object):
    Pencere = [600, 600]
    ref = [Pencere[0]/2, (Pencere[1])*2/3]
    naci = 270
    nveri = 540
    yyon = -1
    xyon = 1
    ky = 2
    kx = 2
    thic = 10
    mes = []
    for i in range(0,nveri+1):
        mes.append(60+(random.random()*20))
    aci = []
    for i in range(0, nveri+1):
        aci.append(math.radians(i*(naci/nveri)))
    kciz = []
    kor = []
    sil = 0

class islem(object):
    def calstr(self):
        oku = open("satt.txt", "r")
        lst = []
        hlst = []
        a = oku.read().split("\n")
        for i in a:
            b = i.split()
            if b != []:
                hlst.append(b)
        #print(hlst)
        for i in hlst:
            i[2] = i[2].replace(".", "")
            i[4] = i[4].replace(".", "")
            i[6] = i[6].replace(".", "")

            i[2] = i[2].replace(",",".")
            i[4] = i[4].replace(",", ".")
            i[6] = i[6].replace(",", ".")
            lst.append([i[0], i[1], i[2], i[3], i[4], i[5], i[6]])

        #print(lst)
        print("Liste Yazımı Bitti!!")
        uni = []
        for i in lst:
            if i[0] in uni:
                pass
            else:
                uni.append(i[0])

        adtlst = []
        for i in uni:
            say = 0
            lstfyt = 0
            minfyt = 100000
            maxfyt = 0
            stsfytl = 0
            ftra = 0
            tftra = 0
            for j in lst:
                if i == j[0]:
                    # Liste Fiyatı
                    if j[5]=="TL":
                        lstfyt = float(j[2])/6.68
                        stsfytl = float(j[4])/8
                        ftra = float(j[6])/8
                    else:
                        lstfyt = float(j[2])
                        stsfytl = float(j[4])
                        ftra = float(j[6])

                    # En yüksek satış
                    if stsfytl > maxfyt:
                        maxfyt = stsfytl

                    # En Düşük Satış
                    if (stsfytl < minfyt):
                        minfyt = stsfytl
                    #Kullanım adetleri
                    say = say + int(j[1])
                    tftra = tftra + ftra
            adtlst.append([i, say, round(lstfyt,2), round(maxfyt,2), round(minfyt,2), round(tftra,2)])
        #print(adtlst)
        dff = pd.DataFrame(adtlst)
        dff.columns = ['Ürün Kodu',
                       'Satılan Adet', 'Liste Fiyatı(€)', 'Max Satış Fiyatı', 'Min Satış Fiyatı', 'Toplam Ciro'
                       ]
        dff.to_excel("ttt.xlsx")
    def koordinat(self):
        aci = pd.DataFrame(sabit.aci)
        mes = pd.DataFrame(sabit.mes)
        korc1 = aci.rolling(1).apply(lambda ww: np.cos(ww), raw=True)
        kors1 = aci.rolling(1).apply(lambda ww: np.sin(ww), raw=True)
        # cisli koordinat oluşumu
        korc2 = (sabit.xyon*sabit.kx)*(np.multiply(mes, korc1))
        korc2 = korc2 + sabit.ref[0]
        kors2 = (sabit.yyon*sabit.ky)*(np.multiply(mes, kors1))
        kors2 = kors2 + sabit.ref[1]

        # Koordinatların birleştirilmesi
        kor = pd.DataFrame(korc2)
        kor.columns = ["x"]
        kor["y"] = kors2
        kor = np.around(kor, decimals=3)
        sabit.kor = np.around(kor, decimals=0)
        # Çizim Koordinatları
        xx = np.array(kor.x)
        x1 = xx - (sabit.thic/2)
        x2 = xx + (sabit.thic/2)
        yy = np.array(kor.y)
        y1 = yy - (sabit.thic/2)
        y2 = yy + (sabit.thic/2)
        korov = pd.DataFrame(x1)
        korov.columns = ["x1"]
        korov["y1"] = y1
        korov["x2"] = x2
        korov["y2"] = y2
        korov = np.around(korov, decimals=0)
        sabit.kciz = np.array(korov)
        gui.anasayfa()

    def sil(self):
        sabit.kciz = []
        sabit.kor = []
        sabit.sil = 1
        gui.anasayfa()

class gui(object):
    frame = Frame(root)
    C = tk.Canvas(frame, bg="white", height=sabit.Pencere[0], width=sabit.Pencere[1])
    buton = Button(frame, text="Yaz", command=partial(islem.koordinat, "self"))
    buton2 = Button(frame, text="Sil", command=partial(islem.sil, "self"))
    buton3 = Button(frame, text="Çalıştır", command=partial(islem.calstr, "self"))
    def anasayfa(self):
        root.title("Anasayfa")
        root.geometry("800x800")
        say = 0
        liste =pd.DataFrame(sabit.kor)
        liste = liste.values.tolist()
        cort = [sabit.ref[0]-10, sabit.ref[1]-10, sabit.ref[0]+10, sabit.ref[1]+10]
        nokta = self.C.create_oval(cort, fill="red")
        for i in liste:
            try:
                kord = [sabit.kor.x[say], sabit.kor.y[say], sabit.kor.x[say+1], sabit.kor.y[say+1]]
                cizgi = self.C.create_line(kord)
            except:
                pass
            say = say + 1

        if sabit.sil == 1:
            self.C.delete("all")
            sabit.sil = 0
        self.C.pack()
        self.buton.pack(fill=X)
        self.buton2.pack(fill=X)
        self.buton3.pack(fill=X)
        self.frame.pack()

gui = gui()
gui.anasayfa()
root.mainloop()
if __name__ == '__main__':
    pass
else:
    print("olmadı!")
